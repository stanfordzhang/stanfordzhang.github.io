{"meta":{"title":"Stanford","subtitle":"Stanford's Home","description":"一蓑烟雨任平生","author":"Stanford Zhang","url":"http://yoursite.com"},"pages":[{"title":"关于","date":"2017-01-04T09:17:58.000Z","updated":"2017-01-04T09:24:02.000Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":""}],"posts":[{"title":"Mac OS X上开发和使用动态链接库/dylib/共享库","slug":"Mac-OS-X上开发和使用动态链接库-dylib-共享库","date":"2017-11-18T13:48:13.000Z","updated":"2017-11-18T14:01:11.962Z","comments":true,"path":"2017/11/18/Mac-OS-X上开发和使用动态链接库-dylib-共享库/","link":"","permalink":"http://yoursite.com/2017/11/18/Mac-OS-X上开发和使用动态链接库-dylib-共享库/","excerpt":"","text":"在OS X上开发应用通常会用到dylib动态链接库，使用XCode开发及调用一个dylib还是比较容易的，通常的做法使用dlopen（类似于Windows上的LoadLibrary）加载dylib，使用dlsym（类似GetProcAddress）找到导出接口，然后调用，最后dlclose（类似FreeLibrary）之即可。这个方法和Linux上使用共享库的方式是一样的，这里就不作介绍了。 本文介绍一种更加方便的方法，通过设置几个编译选项，运行时系统自动加载dylib，使用时只需要调用即可。以下是示例步骤。 一、创建dylib工程创建dylib工程dylib_demo。 二、参数选择 这里以导出C++类接口为例。 参数设置 三、配置编译选项 可以在dylib的Build Phases里看到Installataion Diectory（INSTALL_PATH）这个选项，默认是/usr/local/lib。这个意思是指可执行程序在自动加载时去哪里找这个dylib。可以使用otool进行查看（如下图）。 第一行显示的就是dylib所在的路径：/usr/local/lib/libdylib_demo.dylib。这是系统目录，调用程序会去这个目录找。如果不把dylib拷贝到这个目录，程序将无法运行。发布一个程序时，还要将自用库拷贝到系统目录？这是不合理的。 默认INSTALL_PATH otool查看 这里将Installation Directory改成@loader_path/../Frameworks，以相对目录查找dylib。下图是otool显示。@loader_path的意思相对load这个dylib的模块所在的路径找dylib所在的目录。 修改成@loader_path otool查看 Installation Directory (INSTALL_PATH) 详解： @executable_path 表示可执行程序所在的目录. 比如 /path/foo.app/Contents/MacOS/。@loader_path 表示每一个被加载的 binary（包括App, dylib, framework等）所在的目录。@rpath 和前面两个不同, 它只是一个保存着一个或多个路径的变量。在 app中设置 Runpath Search Paths（对应了@rpath）。四、创建调用app 创建名为caller_demo的app。 创建app 参数设置参数设置 五、设置链接到dylib 在app的Build Phases的Link Binary With Libraries里增加刚刚创建的dylib。 设置链接 如果列表里没有点击右下角的Add Other在目录里找。 也可以在Finder里拖拽dylib到Link Binary With Libraries里。 \b设置链接 六、拷贝dylib至目标目录 这里app包结构包结构里还没有这个dylib，运行时还是找不着。在Build Phases里点加号，新增Copy Files Phase，将dylib拷贝到Frameworks目录下，以便loader可以找到。 这里为什么是Frameworks目录，是因为设置INSTALL_PATH为@loader_path/../Frameworks。 也可以设置为其他目录，比如INSTALL_PATH为@loader_path/../dll，那Copy Files时，就要放到dll目录，如果下拉列表没有相应目录，可以下拉选Frameworks，然后在Subpath里填../dll这个相对路径，XCode会自动创建一个Frameworks同级目录dll。 \b拷贝dylib 拷贝文件 包结构 七、调用 比如在AppDelegate.m文件里调用，因为是使用C++类，所以要将文件扩展名改为.mm，如果是使用标准C、ObjC接口，则不用改。 修改扩展名 调用代码 八、结语 可以看到，以上方法使用比较方便，在开发过程中配置好XCode，一键编译。 调用时可以像静态库一样使用，省时省力。 Reference: http://www.tanhao.me/pieces/1361.html/https://wincent.com/wiki/@executable_path,_@load_path_and_@rpath","categories":[],"tags":[]},{"title":"基于腾讯云自建Blog-WordPress+CentOS+Nginx","slug":"基于腾讯云自建Blog-WordPress-CentOS-Nginx","date":"2016-04-07T13:13:30.000Z","updated":"2017-11-18T13:47:50.000Z","comments":true,"path":"2016/04/07/基于腾讯云自建Blog-WordPress-CentOS-Nginx/","link":"","permalink":"http://yoursite.com/2016/04/07/基于腾讯云自建Blog-WordPress-CentOS-Nginx/","excerpt":"","text":"搭建步骤 申请云服务器 设置云服务器安装组，打开80端口。如果要访问安装在云服务器的MySQL，还要打开3306端口； 参考【1】安装Nginx/MySQL/PHP。如果使用香港云数据库CDB，无法在外网登录管理； 参考【2】安装WordPress； 因为GWF的原因，基于WordPress的网站加载比较慢，这里推荐两个插件： Google字体相关：Useso take over Google（重定向到360网站卫士的镜像）； Gravatar相关：WP-DuoShuo-Gravatar（重写向到多说的镜像）。 固定链接设置【3】。如果是使用默认固定链接，可以不设置。 接下来就可以愉快的写作了。 Reference: 软件安装：https://www.digitalocean.com/community/tutorials/how-to-install-linux-nginx-mysql-php-lemp-stack-on-centos-6 WordPress安装：https://www.digitalocean.com/community/tutorials/how-to-install-wordpress-with-nginx-on-centos-6–2 固定链接设置：http://nginxlibrary.com/wordpress-permalinks/","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2016-04-07T03:13:30.000Z","updated":"2017-11-18T13:28:23.729Z","comments":true,"path":"2016/04/07/hello-world/","link":"","permalink":"http://yoursite.com/2016/04/07/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}